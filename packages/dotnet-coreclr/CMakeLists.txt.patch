--- ./CMakeLists.txt    2018-03-28 04:20:29.000000000 +0530
+++ ./CMakeLists.txt   2018-05-20 09:30:26.535470997 +0530
@@ -287,11 +287,6 @@
 endif()
 
 # check if host & target arch combination are valid
-if(NOT(CLR_CMAKE_TARGET_ARCH STREQUAL CLR_CMAKE_HOST_ARCH))
-    if(NOT((CLR_CMAKE_PLATFORM_ARCH_AMD64 AND CLR_CMAKE_TARGET_ARCH_ARM64) OR (CLR_CMAKE_PLATFORM_ARCH_I386 AND CLR_CMAKE_TARGET_ARCH_ARM)))
-        message(FATAL_ERROR "Invalid host and target arch combination")
-    endif()
-endif()
 
 #-----------------------------------------------------
 # Initialize Cmake compiler flags and other variables
--- ./src/dlls/mscoree/coreclr/CMakeLists.txt	2017-07-19 21:54:25.000000000 +0530
+++ ./src/dlls/mscoree/coreclr/CMakeLists.txt	2017-08-15 10:27:35.280341816 +0530
@@ -25,7 +25,7 @@
     set(EXPORTS_FILE ${CMAKE_CURRENT_BINARY_DIR}/coreclr.exports)
     generate_exports_file(${DEF_SOURCES} ${EXPORTS_FILE})
 
-    if(CMAKE_SYSTEM_NAME STREQUAL Linux OR CMAKE_SYSTEM_NAME STREQUAL FreeBSD OR CMAKE_SYSTEM_NAME STREQUAL NetBSD)
+    if(CMAKE_SYSTEM_NAME STREQUAL Linux OR CMAKE_SYSTEM_NAME STREQUAL FreeBSD OR CMAKE_SYSTEM_NAME STREQUAL NetBSD OR CMAKE_SYSTEM_NAME STREQUAL Android)
         # This option is necessary to ensure that the overloaded delete operator defined inside
         # of the utilcode will be used instead of the standard library delete operator.
         set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Xlinker -Bsymbolic -Xlinker -Bsymbolic-functions")
@@ -40,7 +40,7 @@
         set(END_WHOLE_ARCHIVE -Wl,--no-whole-archive) 
 
         set(EXPORTS_LINKER_OPTION -Wl,--version-script=${EXPORTS_FILE})
-    endif(CMAKE_SYSTEM_NAME STREQUAL Linux OR CMAKE_SYSTEM_NAME STREQUAL FreeBSD OR CMAKE_SYSTEM_NAME STREQUAL NetBSD)
+    endif(CMAKE_SYSTEM_NAME STREQUAL Linux OR CMAKE_SYSTEM_NAME STREQUAL FreeBSD OR CMAKE_SYSTEM_NAME STREQUAL NetBSD OR CMAKE_SYSTEM_NAME STREQUAL Android)
 
     if(CMAKE_SYSTEM_NAME STREQUAL Darwin)
         # These options are used to force every object to be included even if it's unused.
--- ./src/jit/CMakeLists.txt	2017-07-19 21:54:25.000000000 +0530
+++ ./src/jit/CMakeLists.txt	2017-08-15 10:30:41.128133223 +0530
@@ -198,7 +198,7 @@
   set(JIT_EXPORTS_FILE ${CMAKE_CURRENT_BINARY_DIR}/clrjit.exports)
   generate_exports_file(${JIT_EXPORTS_IN_FILE} ${JIT_EXPORTS_FILE})
 
-  if(CMAKE_SYSTEM_NAME STREQUAL Linux OR CMAKE_SYSTEM_NAME STREQUAL FreeBSD OR CMAKE_SYSTEM_NAME STREQUAL NetBSD)
+  if(CMAKE_SYSTEM_NAME STREQUAL Linux OR CMAKE_SYSTEM_NAME STREQUAL FreeBSD OR CMAKE_SYSTEM_NAME STREQUAL NetBSD OR CMAKE_SYSTEM_NAME STREQUAL Android)
     # This is required to force using our own PAL, not one that we are loaded with.
     set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Xlinker -Bsymbolic -Bsymbolic-functions")
 
--- ./src/pal/src/CMakeLists.txt		2018-03-28 04:20:29.000000000 +0530
+++ ./src/pal/src/CMakeLists.txt		2018-05-20 09:26:27.521723269 +0530
@@ -42,7 +42,7 @@
     if(CMAKE_SYSTEM_PROCESSOR STREQUAL x86_64 OR CMAKE_SYSTEM_PROCESSOR STREQUAL amd64 OR CMAKE_SYSTEM_PROCESSOR STREQUAL AMD64)
         set(PAL_CMAKE_PLATFORM_ARCH_AMD64 1)
         add_definitions(-D_AMD64_)
-    elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL armv7l)
+    elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL armv7-a)
         set(PAL_CMAKE_PLATFORM_ARCH_ARM 1)
         add_definitions(-D_ARM_)
     elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL arm)
