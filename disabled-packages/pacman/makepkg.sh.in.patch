--- ./scripts/makepkg.sh.in	2016-02-23 08:22:34.000000000 +0530
+++ ./scripts/makepkg.sh.in	2016-10-28 14:00:47.753203531 +0530
@@ -27,7 +27,7 @@
 
 # makepkg uses quite a few external programs during its execution. You
 # need to have at least the following installed for makepkg to function:
-#   awk, bsdtar (libarchive), bzip2, coreutils, fakeroot, file, find (findutils),
+#   awk, bsdtar (libarchive), bzip2, coreutils, file, find (findutils),
 #   gettext, gpg, grep, gzip, openssl, sed, tput (ncurses), xz
 
 # gettext initialization
@@ -48,7 +48,7 @@
 
 LIBRARY=${LIBRARY:-'@libmakepkgdir@'}
 
-build_options=('ccache' 'distcc' 'buildflags' 'makeflags')
+build_options=('ccache' 'distcc' 'buildflags' 'makeflags' 'fakeroot')
 splitpkg_overrides=('pkgdesc' 'arch' 'url' 'license' 'groups' 'depends'
                     'optdepends' 'provides' 'conflicts' 'replaces' 'backup'
                     'options' 'install' 'changelog')
@@ -167,7 +167,11 @@
 
 enter_fakeroot() {
 	msg "$(gettext "Entering %s environment...")" "fakeroot"
-	fakeroot -- $0 -F "${ARGLIST[@]}" || exit $?
+        if check_buildenv "fakeroot" "y" && (( EUID > 0 )); then
+		fakeroot -- $0 -F "${ARGLIST[@]}" || exit $?
+	else
+		FAKEROOTKEY=true $0 -F "${ARGLIST[@]}" || exit $?
+	fi
 }
 
 # Automatically update pkgver variable if a pkgver() function is provided
@@ -275,7 +279,7 @@
 	# save our shell options and turn off extglob
 	local shellopts=$(shopt -p)
 	shopt -u extglob
-	source /etc/profile &>/dev/null
+	source @prefix@/usr/etc/profile &>/dev/null
 	eval "$shellopts"
 
 	return $R_DEPS_SATISFIED
@@ -850,8 +854,8 @@
 	local ccache=0
 
 	# use ccache if it is requested (check buildenv and PKGBUILD opts)
-	if check_buildoption "ccache" "y" && [[ -d /usr/lib/ccache/bin ]]; then
-		export PATH="/usr/lib/ccache/bin:$PATH"
+	if check_buildoption "ccache" "y" && [[ -d @prefix@/lib/ccache/bin ]]; then
+		export PATH="@prefix@/lib/ccache/bin:$PATH"
 		ccache=1
 	fi
 
@@ -860,8 +864,8 @@
 		if (( ccache )); then
 			export CCACHE_PREFIX="${CCACHE_PREFIX:+$CCACHE_PREFIX }distcc"
 			export CCACHE_BASEDIR="$srcdir"
-		elif [[ -d /usr/lib/distcc/bin ]]; then
-			export PATH="/usr/lib/distcc/bin:$PATH"
+		elif [[ -d @prefix@/lib/distcc/bin ]]; then
+			export PATH="@prefix@/lib/distcc/bin:$PATH"
 		fi
 		export DISTCC_HOSTS
 	fi
@@ -1115,7 +1119,9 @@
 
 	msg2 "$(gettext "Generating %s file...")" ".PKGINFO"
 	printf "# Generated by makepkg %s\n" "$makepkg_version"
-	printf "# using %s\n" "$(fakeroot -v)"
+	if check_buildenv "fakeroot" "y" ; then
+		printf "# using %s\n" "$(fakeroot -v)"
+	fi
 	printf "# %s\n" "$(LC_ALL=C date -u)"
 
 	printf "pkgname = %s\n" "$pkgname"
@@ -1182,7 +1188,7 @@
 		exit 1 # $E_MISSING_PKGDIR
 	fi
 
-	cd_safe "$pkgdir"
+	cd_safe "$pkgdirbase/$pkgname"
 	msg "$(gettext "Creating package \"%s\"...")" "$pkgname"
 
 	pkgarch=$(get_pkg_arch)
@@ -1218,6 +1224,11 @@
 	# the null string rather than itself
 	shopt -s nullglob
 
+	# termux is single user
+	chmod -R 771 .
+	chmod -R 751 "./data/data/com.termux"
+	chmod -R go-rwx ".@prefix@/.."
+
 	msg2 "$(gettext "Generating .MTREE file...")"
 	LANG=C bsdtar -czf .MTREE --format=mtree \
 		--options='!all,use-set,type,uid,gid,mode,time,size,md5,sha256,link' \
@@ -1274,7 +1285,7 @@
 		return
 	fi
 
-	pkgdir="${pkgdir}-@DEBUGSUFFIX@"
+	pkgdir="${pkgdirbase}/$pkgname-@DEBUGSUFFIX@@prefix@/.."
 
 	# check if we have any debug symbols to package
 	if dir_is_empty "$pkgdir/usr/lib/debug"; then
@@ -1682,8 +1693,8 @@
 run_split_packaging() {
 	local pkgname_backup=("${pkgname[@]}")
 	for pkgname in ${pkgname_backup[@]}; do
-		pkgdir="$pkgdirbase/$pkgname"
-		mkdir "$pkgdir"
+		pkgdir="$pkgdirbase/$pkgname@prefix@/.."
+		mkdir -p "$pkgdir"
 		backup_package_variables
 		run_package $pkgname
 		tidy_install
@@ -2034,7 +2045,7 @@
 fi
 
 # set pkgdir to something "sensible" for (not recommended) use during build()
-pkgdir="$pkgdirbase/$pkgbase"
+pkgdir="$pkgdirbase/$pkgbase@prefix@/.."
 
 if (( GENINTEG )); then
 	mkdir -p "$srcdir"
@@ -2115,8 +2126,8 @@
 
 	chmod 755 "$pkgdirbase"
 	if (( ! SPLITPKG )); then
-		pkgdir="$pkgdirbase/$pkgname"
-		mkdir "$pkgdir"
+		pkgdir="$pkgdirbase/$pkgname@prefix@/.."
+		mkdir -p "$pkgdir"
 		if (( PKGFUNC )); then
 			run_package
 		fi
